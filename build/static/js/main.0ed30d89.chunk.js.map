{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localData","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ed30d89.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n    const inputTextHandler=(e)=>{\n        //console.log(e.target.value);\n        setInputText(e.target.value);\n    };\n    const submitTodoHandler=(e)=>{\n        //prevent the input area from refresh\n        e.preventDefault();\n        setTodos([...todos, {text: inputText, completed: false, id: Math.random()*1000}]);\n        //reset state\n        setInputText(\"\");\n    }\n    const statusHandler=(e)=>{\n        setStatus(e.target.value);\n    }\n\n\n\treturn (\n\t\t<form>\n\t\t\t<input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n\t\t\t<button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\n\t\t\t</button>\n\t\t\t<div className=\"select\">\n\t\t\t\t<select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t<option value=\"completed\">Completed</option>\n\t\t\t\t\t<option value=\"uncompleted\">Uncompleted</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\n\nexport default Form;","import React from \"react\";\n\nconst Todo=({text, todo, todos, setTodos})=>{\n    const deleteHandler = () => {\n        //if not equal, the el should return true and will be remained, otherwise will return true and be deleted\n        setTodos(todos.filter(el=>el.id!==todo.id))\n    };\n    const completeHandler=()=>{\n        setTodos(todos.map((item)=>{\n            if(item.id===todo.id){\n                return {\n                    ...item,completed: !item.completed\n                };\n            }\n            return item;\n        }));\n    };\n\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\": \"\"}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className={todo.completed ? \"fas fa-times-circle\" :\"fas fa-check\"}></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst TodoList=({todos, setTodos, filteredTodos})=>{\n    return(\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {\n                filteredTodos.map(todo=>(\n                    <Todo text={todo.text} key={todo.id} todo={todo} todos={todos} setTodos={setTodos}/>\n                ))\n        }\n      </ul>\n    </div>\n    )\n}\n\nexport default TodoList;","import React,{useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //state stuffs\n  const [inputText, setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n  //run once\n  useEffect(()=>{\n    getLocalTodos();\n  },[])\n\n  //use effect\n  useEffect(()=>{\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]) //every time todos changed, run the function\n\n  //function\n  const filterHandler=()=>{\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo=> todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo=> todo.completed !== true));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  //save to localStorage\n  const saveLocalTodos=()=>{\n    localStorage.setItem(\"todos\",JSON.stringify(todos));\n  }\n  //get localStorage\n  const getLocalTodos=()=>{\n    if(localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n    }else{\n      let localData=JSON.parse(localStorage.getItem(\"todos\",JSON.stringify(todos)));\n      setTodos(localData);\n    }\n  }\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>Todo List </h1>\n\t\t\t</header>\n      <Form \n        inputText={inputText} \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList \n        todos={todos} \n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}